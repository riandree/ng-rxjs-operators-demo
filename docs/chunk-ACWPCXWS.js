import{a as S}from"./chunk-TYZ6HY7J.js";import{a as y}from"./chunk-7OOZIZJO.js";import"./chunk-RQIQXLRU.js";import{$a as m,Na as b,Qa as f,V as p,Za as t,_a as i,ab as v,cb as x,eb as w,fb as e,ga as c,ka as d,la as h,lb as g,ma as u,r as l}from"./chunk-FMOREFH7.js";var _=(()=>{let n=class n extends S{constructor(){super(...arguments),this.description="This example shows the behavior of 'switchMap'."}getConcatOperator(){return p(a=>a.pipe(l(([o,r])=>`${o}-${r}`)))}};n.\u0275fac=(()=>{let a;return function(r){return(a||(a=u(n)))(r||n)}})(),n.\u0275cmp=c({type:n,selectors:[["rxd-switch-map"]],standalone:!0,features:[b,g],decls:23,vars:1,consts:[["title","switchMap",3,"desc"],["type","text"],["input",""],[3,"click"]],template:function(o,r){if(o&1){let E=v();m(0,"rxd-demo-header",0),t(1,"p"),e(2," This example facilitates an observable of observables. I.e. each event of the "),t(3,"em"),e(4,'"outer"'),i(),e(5," observable is an observable itself that, in this case, represents a limited stream of numbers. "),i(),t(6,"p"),e(7," The pipe of the outer observable uses the "),t(8,"b"),e(9,"switchMap"),i(),e(10,` operator to map the numbers by turning them into a string and concatenating the value of the textfield below.
`),i(),t(11,"p"),e(12,` Each time this button below is pressed a new "inner" observable providing the sequence 0..9 at an interval of 1 second is put into the stream of the "outer" observable.
`),i(),m(13,"input",1,2),e(15,"\xA0"),t(16,"button",3),x("click",function(){d(E);let M=w(14);return h(r.nextInner(M.value))}),e(17,"next(interval(1000).pipe(take(10)))"),i(),t(18,"p"),e(19," The "),t(20,"b"),e(21,"switchMap"),i(),e(22,`-Operator subscribes to each "inner" observable, maps it's elements and puts the result back into the "outer" stream thereby mapping and flattening the stream of observables. Important! Each "inner" observable is subscribed to immediately and if any subscriptions of earlier "inner" observables exist those are unsubscribed from immediately.
`),i()}o&2&&f("desc",r.description)},dependencies:[y],encapsulation:2});let s=n;return s})();export{_ as SwitchMapComponent};
